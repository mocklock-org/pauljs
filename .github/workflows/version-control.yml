name: pauljs Version Control and Release Notes

on:
  push:
    branches: [ main ]

jobs:
  version-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Setup Git User
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git clean -fd
          git reset --hard HEAD
      
      - name: Determine Version Type
        id: version-type
        run: |
          if [[ "${{ github.event.head_commit.message }}" == *"[wormhole]"* ]]; then
            echo "type=alpha" >> $GITHUB_OUTPUT
            echo "tag=wormhole" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.head_commit.message }}" == *"[beta]"* ]]; then
            echo "type=beta" >> $GITHUB_OUTPUT
            echo "tag=event-horizon" >> $GITHUB_OUTPUT
          else
            echo "type=release" >> $GITHUB_OUTPUT
            echo "tag=neutron" >> $GITHUB_OUTPUT
          fi

      - name: Generate Version
        id: generate-version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          if [[ "${{ steps.version-type.outputs.type }}" == "alpha" ]]; then
            NEW_VERSION=$(npx semver $CURRENT_VERSION -i prerelease --preid alpha)
          elif [[ "${{ steps.version-type.outputs.type }}" == "beta" ]]; then
            NEW_VERSION=$(npx semver $CURRENT_VERSION -i prerelease --preid beta)
          else
            NEW_VERSION=$(npx semver $CURRENT_VERSION -i patch)
          fi
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Clean Working Directory
        run: |
          git clean -fd
          git reset --hard HEAD
          
      - name: Update Version
        run: |
          npm version ${{ steps.generate-version.outputs.version }} -m "ci: bump version to %s [${{ steps.version-type.outputs.tag }}]" --no-git-tag-version
          git add package.json package-lock.json
          git commit -m "ci: bump version to ${{ steps.generate-version.outputs.version }} [${{ steps.version-type.outputs.tag }}]"
          git tag -a "v${{ steps.generate-version.outputs.version }}" -m "Version ${{ steps.generate-version.outputs.version }} [${{ steps.version-type.outputs.tag }}]"
      
      - name: Generate Release Notes
        run: node scripts/version-manager.js
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.generate-version.outputs.version }}
          name: Release v${{ steps.generate-version.outputs.version }} [${{ steps.version-type.outputs.tag }}]
          body_path: CHANGELOG.md
          draft: false
          prerelease: ${{ steps.version-type.outputs.type != 'release' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 