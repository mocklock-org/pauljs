"use strict";const babel=require("@babel/core");function transformJSXToReact(r){const e={presets:[["@babel/preset-react",{runtime:"automatic",development:"production"!==process.env.NODE_ENV}]],plugins:["@babel/plugin-syntax-jsx","@babel/plugin-transform-react-jsx"]};try{return babel.transformSync(r,e).code}catch(r){throw new Error(`Failed to transform JSX: ${r.message}`)}}function extractStylesFromComponent(r){const e=r.match(/<style[^>]*>{([^}]+)}<\/style>/);return e?e[1].trim():""}function createStyleObject(r){return r?r.split("}").filter((r=>r.trim())).reduce(((r,e)=>{const[n,...t]=e.split("{"),o=t.join("{").split(";").filter((r=>r.trim())).reduce(((r,e)=>{const[n,t]=e.split(":").map((r=>r.trim()));if(n&&t){r[n.replace(/-([a-z])/g,(r=>r[1].toUpperCase()))]=t}return r}),{});return r[n.trim()]=o,r}),{}):null}function generateUniqueClassName(r){return`pauljs-${r.toLowerCase()}-${Math.random().toString(36).substr(2,9)}`}function wrapWithErrorBoundary(r){return`\n    class ErrorBoundary extends React.Component {\n      constructor(props) {\n        super(props);\n        this.state = { hasError: false, error: null };\n      }\n\n      static getDerivedStateFromError(error) {\n        return { hasError: true, error };\n      }\n\n      componentDidCatch(error, errorInfo) {\n        console.error('PaulJS Component Error:', error, errorInfo);\n      }\n\n      render() {\n        if (this.state.hasError) {\n          return (\n            <div style={{ \n              padding: '1rem', \n              margin: '1rem', \n              border: '1px solid #ff0000',\n              borderRadius: '4px',\n              backgroundColor: '#fff5f5'\n            }}>\n              <h3 style={{ color: '#ff0000', margin: '0 0 0.5rem' }}>\n                Component Error\n              </h3>\n              <pre style={{ margin: 0 }}>\n                {this.state.error?.message}\n              </pre>\n            </div>\n          );\n        }\n        return this.props.children;\n      }\n    }\n\n    ${r}\n  `}module.exports={transformJSXToReact:transformJSXToReact,extractStylesFromComponent:extractStylesFromComponent,createStyleObject:createStyleObject,generateUniqueClassName:generateUniqueClassName,wrapWithErrorBoundary:wrapWithErrorBoundary};
//# sourceMappingURL=react-utils.js.map
//# sourceMappingURL=..\sourcemaps\react-utils.js.map