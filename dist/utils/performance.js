"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault"),_defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));function ownKeys(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function _objectSpread(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?ownKeys(Object(t),!0).forEach((function(n){(0,_defineProperty2.default)(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}const path=require("path"),fs=require("fs").promises,{createHash:createHash}=require("crypto"),sharp=require("sharp"),csso=require("csso"),{minify:minify}=require("terser");function generateHash(e){return createHash("md5").update(e).digest("hex").slice(0,8)}async function optimizeImage(e,n,t={}){const{quality:r=80,width:o=null,height:i=null,format:s="webp"}=t,a=sharp(e);(o||i)&&a.resize(o,i,{fit:"inside",withoutEnlargement:!0}),await a.toFormat(s,{quality:r})[s]({quality:r,lossless:!1,effort:6}).toFile(n);const c=await Promise.all([320,640,1024,1920].map((async e=>{const t=n.replace(/\.[^.]+$/,`-${e}.${s}`);return await a.resize(e,null,{fit:"inside",withoutEnlargement:!0}).toFormat(s,{quality:r}).toFile(t),{size:e,path:t}})));return{originalPath:n,responsiveImages:c}}function optimizeCSS(e,n={}){return csso.minify(e,_objectSpread({sourceMap:n.sourceMap,filename:n.filename},n)).css}async function optimizeJS(e,n={}){return(await minify(e,_objectSpread({sourceMap:n.sourceMap},n))).code}async function createManifest(e,n){const t={version:process.env.npm_package_version,assets:{}};for(const[n,r]of Object.entries(e)){const e=generateHash(r),o=path.extname(n),i=n.replace(o,`-${e}${o}`);t.assets[n]=i}return await fs.writeFile(n,JSON.stringify(t,null,2)),t}function wrapWithLazyLoading(e){return`\n    const React = require('react');\n    const { lazy, Suspense } = React;\n\n    const LazyComponent = lazy(() => new Promise(resolve => {\n      const delay = process.env.NODE_ENV === 'development' ? 1000 : 0;\n      setTimeout(() => {\n        resolve({\n          default: (function() {\n            ${e}\n          })()\n        });\n      }, delay);\n    }));\n\n    module.exports = function(props) {\n      return (\n        <Suspense fallback={<div>Loading...</div>}>\n          <LazyComponent {...props} />\n        </Suspense>\n      );\n    };\n  `}async function splitComponent(e){const n=await fs.readFile(e,"utf8"),t=[];let r="",o=0;for(const e of n.split("\n")){const n=Buffer.from(e).length;o+n>51200?(t.push(r),r=e,o=n):(r+=e+"\n",o+=n)}return r&&t.push(r),{chunks:t,entryPoint:`\n      const chunks = [\n        ${t.map(((e,n)=>`() => import('./chunk${n}.js')`)).join(",\n")}\n      ];\n      \n      module.exports = async function loadComponent() {\n        const loadedChunks = await Promise.all(chunks.map(chunk => chunk()));\n        return loadedChunks.reduce((merged, chunk) => ({\n          ...merged,\n          ...chunk.default\n        }), {});\n      };\n    `}}module.exports={optimizeImage:optimizeImage,optimizeCSS:optimizeCSS,optimizeJS:optimizeJS,createManifest:createManifest,wrapWithLazyLoading:wrapWithLazyLoading,splitComponent:splitComponent,generateHash:generateHash};
//# sourceMappingURL=performance.js.map
//# sourceMappingURL=..\sourcemaps\performance.js.map